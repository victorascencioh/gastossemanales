{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","helper.js","componentes/Presupuesto.js","componentes/Restante.js","componentes/ControlPresupuesto.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","Formulario","nombreGastoRef","React","createRef","cantidadGastoRef","crearGasto","e","preventDefault","gasto","nombreGasto","_this","current","value","cantidadGasto","agregarGasto","currentTarget","reset","className","onSubmit","this","name","type","placeholder","required","ref","Component","Gasto","_this$props$gasto","Listado","Object","keys","gastos","map","key","componentes_Gasto","validarPresupuesto","presupuesto","totalPresupuesto","parseInt","Presupuesto","Restante","restante","revisarPresupuesto","ControlPresupuesto","Fragment","componentes_Presupuesto","componentes_Restante","App","state","obtenerPresupuesto","prompt","setState","objectSpread","concat","Date","now","restarPresupuesto","cantidad","restar","Number","String","componentes_Header","componentes_Formulario","componentes_Listado","componentes_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0011a27.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = props => {\n\treturn(\n\t\t<header>\n\t\t\t<h1>{props.titulo}</h1>\n\t\t</header>\n\t)\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\t\nclass Formulario extends Component {\n\n\t//refs para gastos de formulario\n\tnombreGastoRef = React.createRef();\n\tcantidadGastoRef = React.createRef();\n\n\tcrearGasto = (e) => {\n\t\t//prevenir default\n\t\te.preventDefault();\n\n\t\t//crear objeto\n\t\tconst gasto = {\n\t\t\tnombreGasto: \tthis.nombreGastoRef.current.value,\n\t\t\tcantidadGasto: \tthis.cantidadGastoRef.current.value\n\t\t}\n\t\n\t\t//agregar y enviar el formulario\n\t\tthis.props.agregarGasto(gasto);\n\n\t\t//resetear formulario\n\t\te.currentTarget.reset();\n\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<form className=\"cotizar-gasto\" onSubmit={this.crearGasto}>\n\t\t\t\t\t<div className=\"campo\">\n\t\t\t\t\t\t<label>Nombre Gasto</label>\n\t\t\t\t\t\t<input className=\"u-full-with\"\n\t\t\t\t\t\tname=\"gasto\" \n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Ej. Transporte\" \n\t\t\t\t\t\trequired ref={this.nombreGastoRef}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"campo\">\n\t\t\t\t\t\t<label>Cantidad</label>\n\t\t\t\t\t\t<input className=\"u-full-with\"\n\t\t\t\t\t\tname=\"cantidad\" \n\t\t\t\t\t\tplaceholder=\"Ej. 300\" \n\t\t\t\t\t\trequired ref={this.cantidadGastoRef}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<input className=\"button-primary\n\t\t\t\t\tu-full-with\" type=\"submit\"\n\t\t\t\t\tvalue=\"Agregar\"\t/>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nFormulario.propTypes = {\n\tagregarGasto: PropTypes.func.isRequired\n}\n\nexport default Formulario;\n\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Gasto extends Component{\t\n\t\n\n\trender(){\n\t\tconst {nombreGasto, cantidadGasto} = this.props.gasto;\n\t\treturn(\n\t\t\t<li className=\"gastos\">\n\t\t\t\t<p>\n\t\t\t\t\t{nombreGasto}\n\t\t\t\t\t<span className=\"gasto\"> $ {cantidadGasto}</span>\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nGasto.propTypes = {\n\tgasto: PropTypes.object.isRequired\n}\nexport default Gasto;","import React, {Component} from 'react';\nimport Gasto from './Gasto';\nimport PropTypes from 'prop-types';\n\nclass Listado extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"gastos-realizados\">\n\t\t\t\t<h2>Listado</h2>\n\t\t\t\t\t{Object.keys( this.props.gastos ).map( key => (\n\t\t\t\t\t\t\t<Gasto\n\t\t\t\t\t\t\t\tkey={key} \n\t\t\t\t\t\t\t\tgasto={this.props.gastos[key]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) ) }\n\t\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nListado.propTypes = {\n\tgastos: PropTypes.object.isRequired\n}\nexport default Listado;","export const validarPresupuesto = presupuesto => {\n    let totalPresupuesto = parseInt(presupuesto, 10)|| 0;\n\n    if(totalPresupuesto > 0 ) {\n        return totalPresupuesto;\n    } else {\n        return false;\n    }\n}\n\nexport const revisarPresupuesto = (presupuesto,restante) => {\n    let clase;\n    // Comprobar el 25% \n    if( (presupuesto / 4) > restante) {\n         clase = 'alert alert-danger';\n    } else if( (presupuesto / 2) > restante) {\n        clase = 'alert alert-warning'\n    } else {\n        clase = 'alert alert alert-success';\n    }\n    return clase;\n} ","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Presupuesto extends Component {\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"alert alert-primary\">\n\t\t\t\tPresupuesto $ {this.props.presupuesto}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nPresupuesto.propTypes = {\n\tpresupuesto: PropTypes.string\n}\n\nexport default Presupuesto;","import React, {Component} from 'react';\nimport {revisarPresupuesto} from '../helper';\nimport PropTypes from 'prop-types';\n\nclass Restante extends Component {\n\trender(){\n\t\tconst presupuesto = this.props.presupuesto;\n\t\tconst restante = this.props.restante;\n\t\n\t\treturn(\n\t\t\t<div className={revisarPresupuesto(presupuesto, restante)}>\n\t\t\t\tRestante $ {restante}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nRestante.propTypes = {\n\tpresupuesto: PropTypes.string,\n\trestante: PropTypes.string\n}\n\nexport default Restante;","import React, {Component} from 'react';\nimport Presupuesto from './Presupuesto';\nimport Restante from './Restante';\nimport PropTypes from 'prop-types';\n\nclass ControlPresupuesto extends Component {\n\trender(){\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<Presupuesto\n\t\t\t\t\tpresupuesto={this.props.presupuesto}\n\t\t\t\t/>\n\t\t\t\t<Restante\n\t\t\t\t\tpresupuesto={this.props.presupuesto}\n\t\t\t\t\trestante={this.props.restante}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nControlPresupuesto.propTypes = {\n\tpresupuesto: PropTypes.string.isRequired,\n\trestante: PropTypes.string\n}\nexport default ControlPresupuesto;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Listado from './Listado';\nimport {validarPresupuesto} from '../helper';\nimport ControlPresupuesto from './ControlPresupuesto';\nclass App extends Component {\n\n  state = {\n    presupuesto: '',\n    restante: '',\n    gastos: {}\n  }\n\n  componentDidMount() {\n    this.obtenerPresupuesto();\n  }\n\n  obtenerPresupuesto = () => {\n    let presupuesto = prompt('¿Cuál es tu presupuesto?');\n    let resultado = validarPresupuesto(presupuesto);\n\n    if(resultado) {\n      this.setState({\n        presupuesto,\n        restante: presupuesto\n      });\n    } else {\n      this.obtenerPresupuesto();\n    }\n  }\n \n  agregarGasto = gasto => {\n      const gastos = {...this.state.gastos};\n\n      //Agregar al gasto al objeto del state\n      gastos[`gasto${Date.now() }`] = gasto;\n\n      //Restar el presupuesto\n      this.restarPresupuesto(gasto.cantidadGasto);\n      //ponerlo en state\n      this.setState({\n        gastos\n      })\n  }\n\n  //Restar del presupuesto cuando un gasto se crea\n  restarPresupuesto = cantidad => {\n    //leer el gasto\n    let restar = Number(cantidad);\n\n    //tomar copia del state\n    let restante = this.state.restante;\n    //lo restamos\n    restante -=restar;\n\n    restante = String(restante);\n    //agregamos nuevo state\n    this.setState({\n      restante\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Header \n            titulo=\"Gastos Semanales\"\n          />\n          <div className=\"contenido-principal contenido\">\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario \n                  agregarGasto={this.agregarGasto}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <Listado \n                    gastos={this.state.gastos}\n                />\n                <ControlPresupuesto \n                  presupuesto={this.state.presupuesto}\n                  restante={this.state.restante}\n                />\n              </div>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}